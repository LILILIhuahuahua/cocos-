{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","duration","start","update","dt","getPlayerDistance","onPicked","opacityRatio","game","timer","starDuration","minOpacity","node","opacity","Math","floor","playerPos","player","getPosition","dist","position","sub","mag","spawnNewStar","destroy","gainScore"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACT;AACAC,oBAAY;AAFH,KAHP;;AAQL;;AAECC,UAVI,oBAWJ;AACI,aAAKC,QAAL,GAAgB,CAAhB;AACH,KAbG;AAeLC,SAfK,mBAeI,CAER,CAjBI;AAmBJC,UAnBI,kBAmBIC,EAnBJ,EAoBJ;AACI;AACA,YAAG,KAAKC,iBAAL,KAAyB,KAAKN,UAAjC,EACA;AACI,iBAAKO,QAAL;AACH;;AAED;AACA,YAAIC,eAAe,IAAE,KAAKC,IAAL,CAAUC,KAAV,GAAgB,KAAKD,IAAL,CAAUE,YAA/C;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKC,IAAL,CAAUC,OAAV,GAAoBF,aAAaG,KAAKC,KAAL,CAAWR,gBAAgB,MAAMI,UAAtB,CAAX,CAAjC;AAEH,KAhCG;;;AAkCLN,uBAAkB,6BAClB;AACK;AACA;AACA,YAAIW,YAAY,KAAKR,IAAL,CAAUS,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKP,IAAL,CAAUQ,QAAV,CAAmBC,GAAnB,CAAuBL,SAAvB,EAAkCM,GAAlC,EAAX;AACA,eAAOH,IAAP;AACJ,KA1CI;;AA4CLb,cAAU,oBAAW;AACjB;AACA,aAAKE,IAAL,CAAUe,YAAV;AACA;AACA,aAAKX,IAAL,CAAUY,OAAV;AACA;AACA,aAAKhB,IAAL,CAAUiB,SAAV;AACH;;AAnDI,CAAT","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n       pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () \r\n     {\r\n         this.duration = 0;\r\n     },\r\n\r\n    start () {\r\n        \r\n    },\r\n\r\n     update (dt) \r\n     {\r\n         // 每帧判断和主角之间的距离是否小于收集距离\r\n         if(this.getPlayerDistance()<this.pickRadius)\r\n         {\r\n             this.onPicked();\r\n         }\r\n\r\n         // 根据 Game 脚本中的计时器更新星星的透明度\r\n         var opacityRatio = 1-this.game.timer/this.game.starDuration;\r\n         var minOpacity = 50;\r\n         this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n         \r\n     },\r\n\r\n    getPlayerDistance:function()\r\n    {\r\n         // 根据 player 节点位置判断距离\r\n         //getPosition() 方法 返回的是节点在父节点坐标系中的位置（x, y）\r\n         var playerPos = this.game.player.getPosition();\r\n         // 根据两点位置计算两点之间距离\r\n         var dist = this.node.position.sub(playerPos).mag();\r\n         return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n        //加分\r\n        this.game.gainScore();\r\n    },\r\n\r\n\r\n});\r\n"]}